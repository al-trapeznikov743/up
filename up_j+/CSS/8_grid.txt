CSS Grid это новая модель для создания шаблонов, оптимизированная для создания двумерных
макетов. Она идеально подходит для того что требует точного и отзывчивого
позиционирования.

Grid шаблон работает по системе сеток. Grid это набор пересекающихся горизонтальных и
вертикальных линий, которые создают размерность и позиционируют систему координат для
контента в самом grid-контейнере.

  display: grid; - автоматически сделает всех прямых потомков этого элемента grid
    элементами;

  grid-template-rows: 1fr 1fr 1fr; - определение количества строк и их разммерность
    относительно друг друга в grid сетке;

  grid-template-columns: 1fr 1fr 1fr; - количество колонок и их размерность;

  grid-template-rows: repeat(5, 1fr); - функция repeat() для повторяющихся объявлений
    значения размера элемента;

  grid-gap: (row-gap, column-gap) - задаёт отступы между элементами (не вдоль
    края сетки);

  grid-template-areas: 
    "header header header"
    "nav article ads"
    "footer footer footer"; - создаёт грид-области путём размещения именованных ячеек
    в грид-раскладке;

  grid-area - это сокращённая форма записи для свойств grid-row-start, grid-column-start,
    grid-row-end и grid-column-end. Определяет размер и местоположение грид-элемента в
    пределах grid row. Задаёт края грид-области грид-элемента;

    Свойство grid-area также может быть установлено в значение <custom-ident>, которое
    действует, как имя области.

    Пример:
      #pageHeader {
        grid-area: header;
      }

  auto-fill - автоматически заполнять строку таким количеством колонок, которое возможно с
    учетом заданной ширины.

    auto-fill используется в связке с repeat() таким образом:

      grid-template-columns: repeat(auto-fill, 100px);

  minmax() - функция в CSS, которуя позволяет вам указывать минимальное и максимальное
    значение одновременно.
    Если нам надо, чтобы колонки были минимум в 100px и максимум в 1fr, то колонки
    автоматически получат размер, чтобы заполнить строку:

      grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));

  auto-fit - работает практически также, как и auto-fill. Разница тут только в том, что
    auto-fit стягивает все пустые треки в конце размещения, в то время как auto-fill нет.

      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));

Подробнее:
  https://medium.com/@stasonmars/%D0%B2%D0%B5%CC%88%D1%80%D1%81%D1%82%D0%BA%D0%B0-%D0%BD%D0%B0-grid-%D0%B2-css-%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5-%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%B8-%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA-220508316f8b
  https://medium.com/@stasonmars/%D0%BA%D0%B0%D0%BA-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82-auto-fill-%D0%B8-auto-fit-%D0%B2-css-grid-7d903a6c678e