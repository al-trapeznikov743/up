LIFO (last in, first out, «последним пришёл — первым ушёл») — способ организации
и манипулирования данными относительно времени и приоритетов. В структурированном
линейном списке, организованном по принципу LIFO, элементы могут добавляться и
выбираться только с одного конца, называемого «вершиной списка».

Типичный пример LIFO - стек вызовов.

Рассмотрим на примере той же рекурсии:
  1) В функции происходит рекурсивный вызов (1), данные текущей функции помещаются в стек
      для возврата к текущей точке выполнения в дальнейшем, управление передаётся
      вновь созданному экземпляру функции

      |     |
      |     |
      |     |
      |  1  | <- 1
      -------

    2) Процедура повторяется и происходит новый рекурсивный вызов (2), данные текущего вызова
      так же помещаются в стек

      |     |
      |     |
      |  2  | <- 2
      |  1  |
      -------
    
    3) И снова рекурсивный вызов (3)

      |     |
      |  3  | <- 3
      |  2  |
      |  1  |
      -------

    4) Последний рекурсивный вызов (3) переходит на граничный случай, функция возвращает результат,
      передаёт управление предыдущей точке выполнения, хранящейся в стеке на уровень ниже,
      данные текущего вызова удаляются из стека

      |     |
      |  3  | 3 ->
      |  2  | <- return x;
      |  1  |
      -------

    5) Вызов (2) так же переходит на граничный случай, возвращает результат "функции-родителю" (1)
      и удаляется из стека

      |     |
      |     |
      |  2  | 2 ->
      |  1  | <- return x;
      -------

    6) (1) завершает работу и возвращает результат.

      |     |
      |     |
      |     |
      |  1  | 1 ->
      ------- -> return x;

FIFO (first in, first out «первым пришёл - первым ушёл») - способ организации и
манипулирования данными относительно времени и приоритетов. Это выражение описывает принцип
технической обработки очереди или обслуживания конфликтных требований путём упорядочения процесса
по принципу: «первым пришёл - первым обслужен» (ПППО). Тот, кто приходит первым, тот и
обслуживается первым, пришедший следующим ждёт, пока обслуживание первого не будет закончено, и
так далее.

Примером в данном случае можно привести алгоритм подкачки памяти

Имеем оперативную память объемом на 3 абстрактных блока

Загружаем первый, затем второй, после третий блок в ОП:

  1-> |   |       | 1 |       | 1 |       | 1 |
      |   |   2-> |   |       | 2 |       | 2 |
      |   |       |   |   3-> |   |       | 3 |
      -----       -----       -----       -----
В итоге получаем полностью заполненную память, что делать дальше?
Дальше необходимо освободить место, и мы выгружаем первый добавленный блок на HDD в раздел
подкачки, а второй добавленный блок в очереди становится первым. Таким образом освобождается
место для нового блока и т.д.

      |   |-1     | 1 |
    ^ | 2 |       | 2 |
    ^ | 3 |   3-> |   |
      -----       -----