deps, devDeps, peerDeps, optDeps, package-lock

npm (node package manager) — менеджер пакетов, входящий в состав Node.js

package.json

deps - dependencies - зависимости
  - здесь указываются все зависимости необходимые для работы проекта. Зависимости указываются
  в простом объекте, который сопоставляет имя пакета с диапазоном версий. Диапазон версий
  - это строка, содержащая один или несколько дескрипторов, разделенных пробелами. Зависимости
  также можно определить с помощью URL-адреса архива или git.

devDeps - devDependencies - зависимости для разработки
  - содержат модули, используемые только в процессе разработки.

  Если кто-то планирует загрузить и использовать ваш модуль в своей программе, то он, вероятно,
  не хочет или не должен загружать и создавать внешнюю структуру тестирования или документации,
  которую вы используете в разработке, при сборке и т.д.

  В этом случае лучше всего отображать эти дополнительные элементы в devDependencies объекте.

peerDeps - peerDependencies - одноранговые зависимости
  Одноранговая зависимость указывает на зависимость (или совместимость), но не требуют скачивать
  код модуля. Этот тип зависимости подходит для случаев, когда для модуля нужна зависимость,
  уже используемая в корневом проекте, чтобы менеджер пакетов не скачивал ее повторно, а
  подключал уже скачанную.

optDeps - optionalDependencies - опциональные (необязательные) зависимости
  Если можно использовать зависимость, но вы хотите, чтобы npm продолжил работу, если ее не
  удается найти или установить, вы можете поместить ее в optionalDependencies.

  Разница в том, что сбои сборки не приводят к сбою установки. Запуск npm install --no-optional
  предотвратит установку этих зависимостей.

  Записи в optionalDependencies переопределяют записи с тем же именем в dependencies, поэтому
  обычно лучше размещать их только в одном месте.

package-lock.json
  Этот файл используется для фиксации в исходных хранилищах и предназначен для осуществления
  следующих целей:

  1) Описывает единственное представление дерева зависимостей, чтобы товарищи по команде,
  разворачивая проект гарантированно установили одинаковые зависимости;

  2) Предоставляет пользователям возможность «путешествовать во времени» к предыдущим состояниям
  node_modules без фиксации самого каталога;

  3) Для облегчения большей видимости изменений в дереве с помощью читаемых исходных текстов
  контроля;

  4) Оптимизация процесса установки, позволяя npm пропускать повторяющиеся установленные пакеты.

  "По сути package-lock - это сдепок папки node_modules со всеми КОНКРЕТНЫМИ установленными там
  версиями"

  "Плюс когда ты какие то операции через npm делаешь, если этот файлик есть, ноде не нужно
  бегать по node_modules и сканировать какие там версии установленны, она просто package-lock
  как базу данных использует"