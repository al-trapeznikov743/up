Gitflow является методологией работы с Git. Она определяет, какие ветки нужно создать и как
производить их слияние.

Gitflow - это набор расширений git предоставляющий высокоуровневые операции над репозиторием
для поддержки модели ветвления Vincent Driessen.

master и develop
  Вместо использования одной ветки master, в этой модели используется две ветки для записи
  истории проекта. В ветке master хранится официальная история релиза, а ветка develop служит
  в качестве интеграционной ветки для новых функций. Также, удобно тегировать все коммиты в
  ветке master номером версии.

Ветки для функций (feature branches)
  Каждая новая функциональность должна разрабатываться в отдельной ветке, которую можно
  отправлять в центральный репозиторий для создания резервной копии/для совместной работы
  команды. Ветки функций создаются не на основе master, a на основе develop. Когда работа
  над новой функциональностью завершена, она вливается назад в develop. Новый код не должен
  отправляться напрямую в master.

Release
  Когда в ветку develop уже слито достаточно нового кода, от ветки develop создается ветка
  release. Создание данной ветки означает начало следующего цикла релиза, в ходе которой
  новая функциональность уже не добавляется, а производится только отладка багов, создание
  документации и решение других задач, связанных с релизом.
  
  Когда все готово, ветка release сливается в master, и ей присваивается тег с версией.
  
  Кроме того, она должна быть также слита обратно в ветку develop, в которой с момента
  создания ветки релиза могли добавляться изменения с момента создания ветки релиза.

  Использование отдельной ветки для подготовки релиза позволяет одной команде дорабатывать
  текущий релиз пока другая команда уже работает над функциональностью для следующего релиза.

Hotfix
  Ветки hotfix используются для быстрого внесения исправлений в рабочую версию кода. Ветки
  hotfix очень похожи на ветки release и feature, за исключением того, что они созданы от
  master, а не от develop.

  Как только исправление завершено, ветка hotfix должна быть объединена как с master, так и с
  develop (или с веткой текущего релиза), а master должен быть помечен обновленным номером версии.

Рабочий процесс:
  1) Из master создается ветка develop.
  2) Из develop создаются ветки feature.
  3) Когда разработка новой функциональности завершена, она объединяется с веткой develop.
  4) Из develop создается ветка release.
  5) Когда ветка релиза готова, она объединяется с develop и master.
  6) Если в master обнаружена проблема, из нее создается ветка hotfix.
  7) Как только исправление на ветке hotfix завершено, она объединяется с develop и master.