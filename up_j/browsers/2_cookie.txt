Cookie - небольшой фрагмент данных, отправленный веб-сервером и хранимый на компьютере
пользователя.

Веб-клиент (обычно веб-браузер) всякий раз при попытке открыть страницу соответствующего
сайта пересылает этот фрагмент данных веб-серверу в составе HTTP-запроса.

На практике обычно используются для:
  - аутентификации пользователя;
  - хранения персональных предпочтений и настроек пользователя;
  - отслеживания состояния сеанса доступа пользователя;
  - сведения статистики о пользователях.

Получив HTTP-запрос, вместе с ответом сервер может отправить заголовок Set-Cookie.
Куки обычно запоминаются браузером и посылаются в HTTP-заголовке Cookie (en-US) с
каждым новым запросом к одному и тому же серверу. Можно задать срок действия кук,
а также срок их жизни, после которого куки не будут отправляться. Также можно
указать ограничения на путь и домен, то есть указать, в течении какого времени и
к какому сайту они будут отсылаться.

Cookie легко перехватить и подменить (например, для получения доступа к учётной записи),
если пользователь использует нешифрованное соединение с сервером. В группе риска
пользователи, выходящие в интернет при помощи публичных точек доступа Wi-Fi и не
использующие при этом таких механизмов, как SSL и TLS.

Для работы с cookie в браузере необходимо перейти по пути:
  - DevTools -> Application -> Storage -> Cookies

Для работы с cookie через JS в объекте Document есть свойство Cookie.

Содержимое cookie (основные поля):
  - name;

  - value;

  - domain - домен, для которого значение cookie действительно;

  - path - путь, url-адрес, который должен существовать в запрашиваемом url для отправки
    cookie. Т.Е. для какой конкретно части сайта предназначен этот cookie;

  - expires/max-age - срок действия или максимальный возраст файла cookie, после которого
    cookie должен быть удалён. К примеру для файлов cookie сеанса это значение всегда
    session;

  - size - размер в байтах;

  - http или httpOnly - дополнительный флаг, который указывает на запрет чтения/записи
    данных cookie посредством JS. Т.Е. куки httpOnly не доступны из JS через свойства
    Document.cookie API, что позволяет избежать межсайтового скрипинга;

  - secure - это поле указывает на то, что файл cookie может быть отправлен на сервер
    только через безопасное соединение HTTPS;

  - priority - это спецификация, которая позволяет расставлять приоритеты для файлов
    cookie при повторной аутентификации. Файлы cookie удаляются, когда они превышают
    емкость файлов cookie для каждого домена. Приоритет файлов cookie позволяет серверам
    удалять старые файлы cookie с более низким приоритетом и дольше сохранять файлы
    cookie с более высоким приоритетом, несмотря на то, что они старше.

https://docs.microsoft.com/ru-ru/microsoft-edge/devtools-guide-chromium/storage/cookies
https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Set-Cookie
https://www.youtube.com/watch?v=7FbAM52h9QA&t=1331s