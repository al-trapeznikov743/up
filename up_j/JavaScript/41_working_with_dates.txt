Для работы с датой и временем в JavaScript используются объекты Date.

  - new Date() - возвращает текущую дату;

  - new Date(milliseconds) - создаёт объект Date, значение которого равно
    количеству миллисекунд (1/1000 секунды), прошедших с 1 января 1970 года GMT+0;

  - new Date(datestring) - если единственный аргумент – строка, используется вызов
    Date.parse для чтения даты из неё;

  - new Date(year, month, date, hours, minutes, seconds, ms) - тут все понятно;

Получение компонентов даты:

  - getFullYear() - получить год;
  - getMonth() - месяц;
  - getDate() - число месяца;
  - getDay() - день недели;
  - getHours(), getMinutes(), getSeconds(), getMilliseconds();

  Все методы, указанные выше, возвращают результат для местной временной зоны.

  - getTime() - возвращает число миллисекунд, с 1 января 1970 года GMT+0;
  - getTimezoneOffset() - возвращает разницу между местным и UTC-временем, в минутах.

Установка компонентов даты:

  - setFullYear(year [, month, date]);
  - setMonth(month [, date]);
  - setDate(date);
  - setHours(hour [, min, sec, ms]);
  - setMinutes(min [, sec, ms]);
  - setSeconds(sec [, ms]);
  - setMilliseconds(ms);
  - setTime(milliseconds) (устанавливает всю дату по миллисекундам с 01.01.1970 UTC).

  Все они, кроме setTime(), обладают также UTC-вариантом, например: setUTCHours().

Преобразование к числу, разность дат:

  Когда объект Date используется в числовом контексте, он преобразуется в количество
  миллисекунд. Даты можно вычитать, результат вычитания объектов Date – их временная
  разница, в миллисекундах.

Форматирование и вывод дат:

  Во всех браузерах, кроме IE10-, поддерживается новый стандарт Ecma 402, который
  добавляет специальные методы для форматирования дат. Это делается вызовом
  date.toLocaleString(локаль, опции), в котором можно задать много настроек.
  Он позволяет указать, какие параметры даты нужно вывести, и ряд настроек вывода,
  после чего интерпретатор сам сформирует строку.

  toString(), toDateString(), toTimeString() Возвращают стандартное строчное
  представление, не заданное жёстко в стандарте, а зависящее от браузера.