<Концепция Dockerfile>--------------------------------------------------------------------------
  Docker контейнер — это образ Docker, вызванный к жизни. Это самодостаточная операционная система,
  в которой имеется только самое необходимое и код приложения.

  Образы Docker являются результатом процесса их сборки, а контейнеры Docker - это выполняющиеся
  образы. Dockerfile сообщают Docker о том, как собирать образы, на основе которых создаются
  контейнеры.

  Контейнеры состоят из слоёв. Каждый слой, кроме последнего, находящегося поверх всех остальных,
  предназначен только для чтения. Dockerfile сообщает системе Docker о том, какие слои и в каком
  порядке надо добавить в образ.

  Каждый слой это файл, который описывает изменение состояния образа в сравнении с тем состоянием,
  в котором он пребывал после добавления предыдущего слоя.

  Базовый образ (родительский образ) - это то, что является исходным слоем (или слоями)
  создаваемого образа.

  В файлах Dockerfile содержатся инструкции по созданию образа. После инструкций идут их аргументы.
  Инструкции, при сборке образа, обрабатываются сверху вниз.

  Слои в итоговом образе создают только инструкции FROM, RUN, COPY, и ADD. Другие инструкции что-то
  настраивают, описывают метаданные, или сообщают Docker о том, что во время выполнения контейнера
  нужно что-то сделать, например открыть какой-то порт или выполнить какую-то команду.


<Примеры основных инструкций Dockerfile>--------------------------------------------------------
  FROM - задаёт базовый (родительский) образ;

  LABEL - описывает метаданные сведения о том, кто создал и поддерживает образ;

  ENV - устанавливает постоянные переменные среды;

  RUN - выполняет команду и создаёт слой образа (используется для установки зависимостей в контейнер);

  COPY - копирует в контейнер файлы и папки;

  ADD - копирует файлы и папки в контейнер, может распаковывать локальные .tar-файлы;

  CMD - описывает команду с аргументами, которую нужно выполнить когда контейнер будет запущен.
    Аргументы могут быть переопределены при запуске контейнера. В файле может присутствовать лишь
    одна инструкция CMD;

  WORKDIR - задаёт рабочую директорию для следующей инструкции;

  ARG - задаёт переменные для передачи Docker во время сборки образа;

  ENTRYPOINT - предоставляет команду с аргументами для вызова во время выполнения контейнера.
    Аргументы не переопределяются;

  EXPOSE - указывает на необходимость открыть порт;

  VOLUME - создаёт точку монтирования для работы с постоянным хранилищем.